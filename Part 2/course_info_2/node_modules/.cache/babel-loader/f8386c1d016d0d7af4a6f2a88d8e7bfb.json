{"ast":null,"code":"var _jsxFileName = \"/home/humza/Documents/full_stack/Part 2/course_info_2/src/App.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Header = ({\n  course\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: course.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Header;\n\nconst Total = ({\n  course\n}) => {\n  //console.log(course.parts[0].exercises)\n  const sum = course.parts.reduce((s, p) => ({\n    exercises: s.exercises + p.exercises\n  }));\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Number of exercises \", sum.exercises]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Total;\n\nconst Part = ({\n  part\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [part.name, \" \", part.exercises]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = Part;\n\nconst Content = ({\n  course\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: course.parts.map(part => /*#__PURE__*/_jsxDEV(Part, {\n      part: part\n    }, part.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 39\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_c4 = Content;\n\nconst App = () => {\n  const courses = [{\n    name: 'Half Stack application development',\n    id: 1,\n    parts: [{\n      name: 'Fundamentals of React',\n      exercises: 10,\n      id: 1\n    }, {\n      name: 'Using props to pass data',\n      exercises: 7,\n      id: 2\n    }, {\n      name: 'State of a component',\n      exercises: 14,\n      id: 3\n    }, {\n      name: 'Redux',\n      exercises: 11,\n      id: 4\n    }]\n  }, {\n    name: 'Node.js',\n    id: 2,\n    parts: [{\n      name: 'Routing',\n      exercises: 3,\n      id: 1\n    }, {\n      name: 'Middlewares',\n      exercises: 7,\n      id: 2\n    }]\n  }];\n  return /*#__PURE__*/_jsxDEV(Course, {\n    courses: courses\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 12\n  }, this);\n};\n\n_c5 = App;\n\nconst Course = ({\n  courses\n}) => {\n  const courseInfo = courses.map(course => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        course: course\n      }, course.name + \" header\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        course: course\n      }, course.name + \" content\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Total, {\n        course: course\n      }, course.name + \" total\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: courseInfo\n  }, void 0, false);\n};\n\n_c6 = Course;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Total\");\n$RefreshReg$(_c3, \"Part\");\n$RefreshReg$(_c4, \"Content\");\n$RefreshReg$(_c5, \"App\");\n$RefreshReg$(_c6, \"Course\");","map":{"version":3,"sources":["/home/humza/Documents/full_stack/Part 2/course_info_2/src/App.js"],"names":["React","Header","course","name","Total","sum","parts","reduce","s","p","exercises","Part","part","Content","map","App","courses","id","Course","courseInfo"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst Header = ({ course }) => {\n    return (\n        <h1>{course.name}</h1>\n    )\n}\n\nconst Total = ({ course }) => {\n    //console.log(course.parts[0].exercises)\n    const sum = course.parts.reduce((s, p) => ({ exercises: s.exercises + p.exercises}))\n    return(\n        <p>Number of exercises {sum.exercises}</p>\n    )\n}\n\nconst Part = ({part}) => {\n    return (\n        <p>\n            {part.name} {part.exercises}\n        </p>\n    )\n}\n\nconst Content = ({ course }) => {\n    return (\n        <div>\n            {course.parts.map(part => <Part key={part.name} part={part}/>)}\n        </div>\n    )\n}\n\nconst App = () => {\n    const courses = [\n        {\n            name: 'Half Stack application development',\n            id: 1,\n            parts: [\n                {\n                    name: 'Fundamentals of React',\n                    exercises: 10,\n                    id: 1\n                },\n                {\n                    name: 'Using props to pass data',\n                    exercises: 7,\n                    id: 2\n                },\n                {\n                    name: 'State of a component',\n                    exercises: 14,\n                    id: 3\n                },\n                {\n                    name: 'Redux',\n                    exercises: 11,\n                    id: 4\n                }\n            ]\n        },\n        {\n            name: 'Node.js',\n            id: 2,\n            parts: [\n                {\n                    name: 'Routing',\n                    exercises: 3,\n                    id: 1\n                },\n                {\n                    name: 'Middlewares',\n                    exercises: 7,\n                    id: 2\n                }\n            ]\n        }\n    ]\n\n    return <Course courses={courses} />\n}\n\nconst Course = ({courses}) => {\n    const courseInfo = courses.map(course => {\n        return (<>\n            <Header key={course.name + \" header\"} course={course} />\n            <Content key={course.name + \" content\"} course={course} />\n            <Total key={course.name + \" total\"} course={course} />\n        </>)\n    })\n    return(<>\n        {courseInfo}\n    </>)\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}